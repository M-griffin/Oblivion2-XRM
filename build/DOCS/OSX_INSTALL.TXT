
Main List of Dependencies for Oblivion/2 XRM for OSX
Compilation in OSX - Tested on Latest High Sierra distribution.
09/16/2018 - Initial Write up
07/26/2019 - Updated dependency paths and build scripts with documentation.

Requirements:
	/usr/local/opt/sqlite
	/usr/local/opt/yaml-cpp
	/usr/local/opt/openssl
	/usr/local/opt/libssh
	/usr/local/opt/ossp-uuid
	/usr/local/opt/boost
    /usr/local/opt/unittest-cpp

Note, Boost is only used for the menu and prompt conversion utilities

#---------------------------------------------------------------------------------------
Homebrew Note, Some might not use Homebrew for their package management
However, I needed to setup specific Include file locations in the .mk Makefiles
And so if you do NOT use Homebrew, then these paths would need to be updated manually.
#---------------------------------------------------------------------------------------

Install Homebrew:
	ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"

Update Homebrew:
	brew doctor
	brew update

Install Dependencies:
	brew install sqlite3
	brew install labs
	brew install yaml-cpp
	brew install ossp-uuid
    brew install unittest-cpp
    brew install boost

Install GIT to pull down project:
	brew install git

Install latest compiler with c++11 compatibility is NEEDED!
	I have the following version installed or later..

	Apple LLVM version 9.0.0 (clang-900.0.39.2)
	Target: x86_64-apple-darwin17.4.0
	Thread model: Posix
	InstalledDir: /Library/Developer/CommandLineTools/usr/bin

	brew install clang

You can check check /usr/local/Cellar for program versions installed
All Lib and Include files are linked to /usr/local/opt


Clone the project - This will checkout and create project in current folder.

        git clone https://github.com/M-griffin/Oblivion2-XRM.git .

        cd build
        ./build-osx.sh -j2  (Notes, -j# is number of cpu cores for faster compiling)

This will build all project files and copy the executables back to the build folder
once completed.

        ./xrm-server              - to start the bbs
        ./xrm-unittest            - to run the unit tests
        ./xrm-menu-convert        - convert Legacy Obv/2 menus to yaml format for XRM.
        ./xrm-menu-prompt-comvert - convert Legacy Obv/2 prompt to yaml format for XRM.

The default port will be 6023 and can be updated in the xrm-server.yaml configuration that gets auto-generated after you run the system the first time.

All data files, and configuration file are generated on the initial startup of the system.
If you goof anything up, simply delete the file and re-run the program and it will re-generate as needed.

